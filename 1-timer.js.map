{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputRef = document.querySelector('#datetime-picker');\nconst startBtnRef = document.querySelector('button[data-start]');\nstartBtnRef.addEventListener('click', startTimer);\nstartBtnRef.disabled = true;\n\nconst timerRefs = {\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]')\n}\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const diff = new Date(selectedDates[0]).getTime() - Date.now();\n\n    if (diff <= 0) {\n      iziToast.show({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        color: 'red'\n      });\n    } else {\n      userSelectedDate = selectedDates[0];\n      startBtnRef.disabled = false;\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction startTimer() {\n  const intervalId = setInterval(()=> {\n\n    startBtnRef.disabled = true;\n    inputRef.disabled = true;\n\n    const diff = new Date(userSelectedDate).getTime() - Date.now();\n    let { days, hours, minutes, seconds } = convertMs(diff);\n\n    timerRefs.days.textContent = addLeadingZero(days);\n    timerRefs.hours.textContent = addLeadingZero(hours);\n    timerRefs.minutes.textContent = addLeadingZero(minutes);\n    timerRefs.seconds.textContent = addLeadingZero(seconds);\n\n    if (diff <= 0) {\n      clearInterval(intervalId);\n      inputRef.disabled = false;\n    }\n\n  }, 1000)\n}\n\nfunction convertMs(ms) {\n  \n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["inputRef","startBtnRef","startTimer","timerRefs","userSelectedDate","options","selectedDates","iziToast","flatpickr","intervalId","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAc,SAAS,cAAc,oBAAoB,EAC/DA,EAAY,iBAAiB,QAASC,CAAU,EAChDD,EAAY,SAAW,GAEvB,MAAME,EAAY,CAChB,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEA,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACR,IAAI,KAAKA,EAAc,CAAC,CAAC,EAAE,QAAS,EAAG,KAAK,OAE7C,EACVC,EAAS,KAAK,CACZ,MAAO,UACP,QAAS,qCACT,SAAU,WACV,MAAO,KACf,CAAO,GAEDH,EAAmBE,EAAc,CAAC,EAClCL,EAAY,SAAW,GAE1B,CACH,EAEAO,EAAU,mBAAoBH,CAAO,EAErC,SAASH,GAAa,CACpB,MAAMO,EAAa,YAAY,IAAK,CAElCR,EAAY,SAAW,GACvBD,EAAS,SAAW,GAEpB,MAAMU,EAAO,IAAI,KAAKN,CAAgB,EAAE,UAAY,KAAK,MACzD,GAAI,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAEtDP,EAAU,KAAK,YAAca,EAAeL,CAAI,EAChDR,EAAU,MAAM,YAAca,EAAeJ,CAAK,EAClDT,EAAU,QAAQ,YAAca,EAAeH,CAAO,EACtDV,EAAU,QAAQ,YAAca,EAAeF,CAAO,EAElDJ,GAAQ,IACV,cAAcD,CAAU,EACxBT,EAAS,SAAW,GAGvB,EAAE,GAAI,CACT,CAEA,SAASe,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}